services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: sports_db
    environment:
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
      POSTGRES_DB: sports_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U db_user -d sports_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sports_facility_backend
    ports:
      - "8000:8000"
    environment:
      DB_USER: db_user
      DB_PASSWORD: db_password
      DB_HOST: postgres
      DB_NAME: sports_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: sh -c "python seed.py && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  # Frontend 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sports_facility_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_URL=http://localhost:8000
    command: ["npm", "start"]
    depends_on:
      - backend

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data: