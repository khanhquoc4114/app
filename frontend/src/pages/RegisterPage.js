import React, { useState } from 'react';
import {
    Card,
    Form,
    Input,
    Button,
    Typography,
    Divider,
    Space,
    Checkbox,
    message
} from 'antd';
import {
    UserOutlined,
    LockOutlined,
    MailOutlined,
    PhoneOutlined,
    GoogleOutlined,
    FacebookOutlined
} from '@ant-design/icons';
import { useNavigate, Link } from 'react-router-dom';
import { authAPI } from '../services/api';

const { Title, Text } = Typography;

const RegisterPage = () => {
    const navigate = useNavigate();
    const [loading, setLoading] = useState(false);
    const [form] = Form.useForm();

    const handleRegister = async (values) => {
        setLoading(true);

        try {
            // G·ªçi API ƒëƒÉng k√Ω
            await authAPI.register({
                username: values.email, // D√πng email l√†m username
                email: values.email,
                full_name: values.fullName,
                password: values.password
            });

            message.success('ƒêƒÉng k√Ω th√†nh c√¥ng! B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p ngay.');
            navigate('/login');
        } catch (error) {
            message.error(error.message || 'ƒêƒÉng k√Ω th·∫•t b·∫°i');
        } finally {
            setLoading(false);
        }
    };

    const handleSocialLogin = (provider) => {
        message.info(`ƒêƒÉng k√Ω b·∫±ng ${provider} ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn`);
    };

    return (
        <div style={{
            minHeight: '100vh',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
            padding: '20px'
        }}>
            <Card style={{ width: '100%', maxWidth: 450 }}>
                <div style={{ textAlign: 'center', marginBottom: 32 }}>
                    <div style={{ fontSize: '48px', marginBottom: 16 }}>üèüÔ∏è</div>
                    <Title level={2} style={{ margin: 0 }}>
                        ƒêƒÉng k√Ω
                    </Title>
                    <Text type="secondary">
                        T·∫°o t√†i kho·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu ƒë·∫∑t s√¢n
                    </Text>
                </div>

                <Form
                    form={form}
                    layout="vertical"
                    onFinish={handleRegister}
                    size="large"
                >
                    <Form.Item
                        name="fullName"
                        label="H·ªç v√† t√™n"
                        rules={[
                            { required: true, message: 'Vui l√≤ng nh·∫≠p h·ªç t√™n' },
                            { min: 2, message: 'H·ªç t√™n ph·∫£i c√≥ √≠t nh·∫•t 2 k√Ω t·ª±' }
                        ]}
                    >
                        <Input
                            prefix={<UserOutlined />}
                            placeholder="Nh·∫≠p h·ªç v√† t√™n"
                        />
                    </Form.Item>

                    <Form.Item
                        name="email"
                        label="Email"
                        rules={[
                            { required: true, message: 'Vui l√≤ng nh·∫≠p email' },
                            { type: 'email', message: 'Email kh√¥ng h·ª£p l·ªá' }
                        ]}
                    >
                        <Input
                            prefix={<MailOutlined />}
                            placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                        />
                    </Form.Item>

                    <Form.Item
                        name="phone"
                        label="S·ªë ƒëi·ªán tho·∫°i"
                        rules={[
                            { required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i' },
                            { pattern: /^[0-9]{10,11}$/, message: 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá' }
                        ]}
                    >
                        <Input
                            prefix={<PhoneOutlined />}
                            placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                        />
                    </Form.Item>

                    <Form.Item
                        name="password"
                        label="M·∫≠t kh·∫©u"
                        rules={[
                            { required: true, message: 'Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u' },
                            { min: 6, message: 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±' }
                        ]}
                    >
                        <Input.Password
                            prefix={<LockOutlined />}
                            placeholder="Nh·∫≠p m·∫≠t kh·∫©u"
                        />
                    </Form.Item>

                    <Form.Item
                        name="confirmPassword"
                        label="X√°c nh·∫≠n m·∫≠t kh·∫©u"
                        dependencies={['password']}
                        rules={[
                            { required: true, message: 'Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u' },
                            ({ getFieldValue }) => ({
                                validator(_, value) {
                                    if (!value || getFieldValue('password') === value) {
                                        return Promise.resolve();
                                    }
                                    return Promise.reject(new Error('M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp'));
                                },
                            }),
                        ]}
                    >
                        <Input.Password
                            prefix={<LockOutlined />}
                            placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u"
                        />
                    </Form.Item>

                    <Form.Item
                        name="agreement"
                        valuePropName="checked"
                        rules={[
                            {
                                validator: (_, value) =>
                                    value ? Promise.resolve() : Promise.reject(new Error('Vui l√≤ng ƒë·ªìng √Ω v·ªõi ƒëi·ªÅu kho·∫£n'))
                            },
                        ]}
                    >
                        <Checkbox>
                            T√¥i ƒë·ªìng √Ω v·ªõi{' '}
                            <Link to="/terms" style={{ color: '#1890ff' }}>
                                ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng
                            </Link>
                            {' '}v√†{' '}
                            <Link to="/privacy" style={{ color: '#1890ff' }}>
                                Ch√≠nh s√°ch b·∫£o m·∫≠t
                            </Link>
                        </Checkbox>
                    </Form.Item>

                    <Form.Item>
                        <Button
                            type="primary"
                            htmlType="submit"
                            block
                            loading={loading}
                            style={{ height: 48 }}
                        >
                            ƒêƒÉng k√Ω
                        </Button>
                    </Form.Item>
                </Form>

                <Divider>Ho·∫∑c</Divider>

                <Space direction="vertical" style={{ width: '100%' }} size={12}>
                    <Button
                        block
                        icon={<GoogleOutlined />}
                        onClick={() => handleSocialLogin('Google')}
                        style={{ height: 48 }}
                    >
                        ƒêƒÉng k√Ω b·∫±ng Google
                    </Button>

                    <Button
                        block
                        icon={<FacebookOutlined />}
                        onClick={() => handleSocialLogin('Facebook')}
                        style={{ height: 48 }}
                    >
                        ƒêƒÉng k√Ω b·∫±ng Facebook
                    </Button>
                </Space>

                <div style={{ textAlign: 'center', marginTop: 24 }}>
                    <Text type="secondary">
                        ƒê√£ c√≥ t√†i kho·∫£n? {' '}
                        <Link to="/login" style={{ color: '#1890ff' }}>
                            ƒêƒÉng nh·∫≠p ngay
                        </Link>
                    </Text>
                </div>
            </Card>
        </div>
    );
};

export default RegisterPage;