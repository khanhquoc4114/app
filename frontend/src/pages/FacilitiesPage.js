import React, { useState, useEffect } from 'react';
import {
    Row,
    Col,
    Card,
    Button,
    Select,
    Input,
    Tag,
    Rate,
    Typography,
    Space,
    Spin
} from 'antd';
import {
    SearchOutlined,
    EnvironmentOutlined,
    ClockCircleOutlined,
    DollarOutlined
} from '@ant-design/icons';
import { useNavigate } from 'react-router-dom';
import AdvancedSearch from '../components/AdvancedSearch';
import { FadeInCard } from '../components/AnimatedComponents';
import { FacilityListSkeleton } from '../components/LoadingSkeletons';

const { Title, Text } = Typography;
const { Option } = Select;
const { Search } = Input;

const FacilitiesPage = () => {
    const navigate = useNavigate();
    const [loading, setLoading] = useState(false);
    const [facilities, setFacilities] = useState([]);
    const [filteredFacilities, setFilteredFacilities] = useState([]);
    const [selectedSport, setSelectedSport] = useState('all');
    const [searchText, setSearchText] = useState('');

    // Mock data - s·∫Ω thay th·∫ø b·∫±ng API call
    const mockFacilities = [
        {
            id: 1,
            name: 'S√¢n c·∫ßu l√¥ng VIP 1',
            sport: 'badminton',
            sportName: 'C·∫ßu l√¥ng',
            price: 80000,
            rating: 4.8,
            location: 'Qu·∫≠n 1, TP.HCM',
            image: 'üè∏',
            amenities: ['ƒêi·ªÅu h√≤a', 'Thay ƒë·ªì', 'N∆∞·ªõc u·ªëng'],
            openTime: '06:00 - 22:00',
            available: true
        },
        {
            id: 2,
            name: 'S√¢n b√≥ng ƒë√° mini A',
            sport: 'football',
            sportName: 'B√≥ng ƒë√°',
            price: 200000,
            rating: 4.5,
            location: 'Qu·∫≠n 3, TP.HCM',
            image: '‚öΩ',
            amenities: ['C·ªè nh√¢n t·∫°o', 'ƒê√®n chi·∫øu s√°ng', 'B√£i ƒë·ªó xe'],
            openTime: '05:00 - 23:00',
            available: true
        },
        {
            id: 3,
            name: 'S√¢n tennis cao c·∫•p',
            sport: 'tennis',
            sportName: 'Tennis',
            price: 150000,
            rating: 4.9,
            location: 'Qu·∫≠n 7, TP.HCM',
            image: 'üéæ',
            amenities: ['M·∫∑t s√¢n chuy√™n nghi·ªáp', 'Thay ƒë·ªì VIP', 'CƒÉng tin'],
            openTime: '06:00 - 21:00',
            available: false
        },
        {
            id: 4,
            name: 'S√¢n b√≥ng r·ªï trong nh√†',
            sport: 'basketball',
            sportName: 'B√≥ng r·ªï',
            price: 120000,
            rating: 4.6,
            location: 'Qu·∫≠n 10, TP.HCM',
            image: 'üèÄ',
            amenities: ['S√†n g·ªó chuy√™n nghi·ªáp', 'ƒêi·ªÅu h√≤a', '√Çm thanh'],
            openTime: '07:00 - 22:00',
            available: true
        },
        {
            id: 5,
            name: 'S√¢n c·∫ßu l√¥ng ti√™u chu·∫©n',
            sport: 'badminton',
            sportName: 'C·∫ßu l√¥ng',
            price: 60000,
            rating: 4.3,
            location: 'Qu·∫≠n 5, TP.HCM',
            image: 'üè∏',
            amenities: ['S√†n g·ªó', 'Thay ƒë·ªì', 'Wifi mi·ªÖn ph√≠'],
            openTime: '06:00 - 23:00',
            available: true
        },
        {
            id: 6,
            name: 'S√¢n b√≥ng ƒë√° 7v7',
            sport: 'football',
            sportName: 'B√≥ng ƒë√°',
            price: 300000,
            rating: 4.7,
            location: 'Qu·∫≠n 2, TP.HCM',
            image: '‚öΩ',
            amenities: ['C·ªè t·ª± nhi√™n', 'Kh√°n ƒë√†i', 'Ph√≤ng thay ƒë·ªì'],
            openTime: '05:30 - 22:30',
            available: true
        }
    ];

    useEffect(() => {
        setLoading(true);
        // Simulate API call
        setTimeout(() => {
            setFacilities(mockFacilities);
            setFilteredFacilities(mockFacilities);
            setLoading(false);
        }, 1000);
    }, []);

    useEffect(() => {
        let filtered = facilities;

        if (selectedSport !== 'all') {
            filtered = filtered.filter(facility => facility.sport === selectedSport);
        }

        if (searchText) {
            filtered = filtered.filter(facility =>
                facility.name.toLowerCase().includes(searchText.toLowerCase()) ||
                facility.location.toLowerCase().includes(searchText.toLowerCase())
            );
        }

        setFilteredFacilities(filtered);
    }, [selectedSport, searchText, facilities]);

    const handleBooking = (facilityId) => {
        navigate(`/booking/${facilityId}`);
    };

    const formatPrice = (price) => {
        return new Intl.NumberFormat('vi-VN', {
            style: 'currency',
            currency: 'VND'
        }).format(price);
    };

    if (loading) {
        return <FacilityListSkeleton />;
    }

    return (
        <div>
            <div style={{ marginBottom: 24 }}>
                <Title level={2}>Danh s√°ch s√¢n th·ªÉ thao</Title>
            </div>

            <AdvancedSearch
                onSearch={setSearchText}
                onFilterChange={(filters) => {
                    setSelectedSport(filters.sport);
                    setSearchText(filters.keyword);
                }}
            />

            <Row gutter={[16, 16]}>
                {filteredFacilities.map((facility) => (
                    <Col xs={24} sm={12} lg={8} key={facility.id}>
                        <Card
                            className="facility-card"
                            cover={
                                <div style={{
                                    height: 200,
                                    background: 'linear-gradient(45deg, #f0f2f5, #e6f7ff)',
                                    display: 'flex',
                                    alignItems: 'center',
                                    justifyContent: 'center',
                                    fontSize: '64px'
                                }}>
                                    {facility.image}
                                </div>
                            }
                            actions={[
                                <Button
                                    type="primary"
                                    disabled={!facility.available}
                                    onClick={() => handleBooking(facility.id)}
                                    style={{ width: '90%' }}
                                >
                                    {facility.available ? 'ƒê·∫∑t s√¢n ngay' : 'H·∫øt ch·ªó'}
                                </Button>
                            ]}
                        >
                            <Card.Meta
                                title={
                                    <Space direction="vertical" size={4}>
                                        <Text strong>{facility.name}</Text>
                                        <Tag color="blue">{facility.sportName}</Tag>
                                    </Space>
                                }
                                description={
                                    <Space direction="vertical" size={8}>
                                        <div>
                                            <Rate disabled defaultValue={facility.rating} style={{ fontSize: 14 }} />
                                            <Text type="secondary" style={{ marginLeft: 8 }}>
                                                {facility.rating}
                                            </Text>
                                        </div>

                                        <div>
                                            <EnvironmentOutlined style={{ color: '#666', marginRight: 4 }} />
                                            <Text type="secondary">{facility.location}</Text>
                                        </div>

                                        <div>
                                            <ClockCircleOutlined style={{ color: '#666', marginRight: 4 }} />
                                            <Text type="secondary">{facility.openTime}</Text>
                                        </div>

                                        <div>
                                            <DollarOutlined style={{ color: '#666', marginRight: 4 }} />
                                            <Text strong style={{ color: '#1890ff' }}>
                                                {formatPrice(facility.price)}/gi·ªù
                                            </Text>
                                        </div>

                                        <div style={{ marginTop: 8 }}>
                                            {facility.amenities.map((amenity, index) => (
                                                <Tag key={index} size="small" style={{ marginBottom: 4 }}>
                                                    {amenity}
                                                </Tag>
                                            ))}
                                        </div>
                                    </Space>
                                }
                            />
                        </Card>
                    </Col>
                ))}
            </Row>

            {filteredFacilities.length === 0 && (
                <div style={{ textAlign: 'center', padding: '50px' }}>
                    <Text type="secondary">Kh√¥ng t√¨m th·∫•y s√¢n ph√π h·ª£p</Text>
                </div>
            )}
        </div>
    );
};

export default FacilitiesPage;